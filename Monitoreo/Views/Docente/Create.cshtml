@using BootstrapEditorTemplatesNameSpace.Utility
@model Monitoreo.Models.Docente

@{
    ViewBag.Title = String.Format(Resources.T.ResourceManager.GetString("CreandoX"), Resources.T.ResourceManager.GetString("Docente"));
}

<div class="panel-heading">
    <h3>@ViewBag.Title</h3>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            @*@Html.EditorFor(model => model.Codigo)*@
            <div class="form-group">
                @Html.LabelFor(model => model.PersonaId, Resources.T.ResourceManager.GetString("Persona"), new { @class = "control-label col-sm-3" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.PersonaId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PersonaId)
                </div>
            </div>
            @Html.EditorFor(model => model.FormacionAcademica)
            @Html.EditorFor(model => model.AnosDeEjercicio)
            @if (@Request.Params["MasterType"] == "Centro")
            {
                @Html.Hidden("CentroId", Request.Params["MasterId"]);
            }
            else
            {
            <div class="form-group">
                @Html.LabelFor(model => model.CentroId, Resources.T.ResourceManager.GetString("Centro"), new { @class = "control-label col-sm-3" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.CentroId, (IEnumerable<SelectListItem>)ViewBag.CentroId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CentroId)
                </div>
            </div>
            }
            @Html.EditorFor(model => model.FechaContratacion)
            @{
                var materiaTemplate = new Monitoreo.Models.DocenteMateria();
            }
            <table id="@Html.IdFor(model => model.Materias)" class="table table-bordered table-striped table-hover">
                <caption><h3>@Html.DisplayNameFor(model => model.Materias)</h3></caption>
                <thead>
                    <tr>
                        @*<th>@Html.DisplayNameFor(model => materiaTemplate.Nivel)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Ciclo)</th>*@
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Tanda)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Area)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Grados)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.SeccionId)</th>
                        <th>@Resources.T.ResourceManager.GetString("Acciones")</th>
                    </tr>
                </thead>
                <tbody>
                    <tr id="materiaTemplate" style="display: none;">
                        @*<td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Nivel, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Nivel)
                        </td>
                        <td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Ciclo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Ciclo)
                        </td>*@
                        <td>
                            @Html.HiddenFor(model => materiaTemplate.DocenteId)
                            @Html.EnumDropDownListFor(model => materiaTemplate.Tanda, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Tanda)
                        </td>
                        <td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Area, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Area)
                        </td>
                        <td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Grados, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Grados)
                        </td>
                        <td>
                            @Html.DropDownListFor(model => materiaTemplate.SeccionId, (IEnumerable<SelectListItem>)ViewBag.SeccionId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.SeccionId)
                        </td>
                        <td>
                            <a href="#" class="btn btn-danger" onclick="return removeMateria('materiaTemplate');">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                            </a>
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="7">
                            <a href="#" class="btn btn-default" onclick='return addMateria();'>
                                <span class="glyphicon glyphicon-file" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Agregar")
                            </a>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
    <div class="panel-footer">
        <button type="submit" value="Create" class="btn btn-primary">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Guardar")
        </button>
    </div>
}

<script type="text/javascript" src="~/Content/js/personaSelect2imp.js"></script>

@section Actions {
    <ul class="nav nav-stacked">
        <li>@Html.ActionLink(Resources.T.ResourceManager.GetString("Volver"), "Index")</li>
    </ul>
}

<script type="text/javascript">
    var cantidadMateria = 0;

    @if (Model != null && Model.Materias != null)
    {
        <text>cantidadMateria = </text>@Model.Materias.Count;
    }

    function addMateria() {
        var clonned = $("#materiaTemplate")
            .clone()
            .attr({ id: "Materias_" + cantidadMateria + "_", style: "display: table-row" })
            .appendTo("#@Html.IdFor(model => model.Materias)");
        
        var contenido = clonned.html().replace(/materiaTemplate/g, "Materias[" + cantidadMateria + "]");
        clonned.html(contenido);

        cantidadMateria++;

        return false;
    };

    function removeMateria(id) {
        newId = id.replace(/[\[\]]/g, "_");
        materiaTr = $('#' + newId);
        materiaId = $('#' + newId + '_Id');

        if (materiaId != undefined) {
            value = materiaId.val();
            materiaId.val(value * -1);
        }

        materiaTr.hide();

        return false;
    }
</script>