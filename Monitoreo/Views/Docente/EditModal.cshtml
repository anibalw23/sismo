@using BootstrapEditorTemplatesNameSpace.Utility
@model Monitoreo.Models.Docente

<div class="panel-heading">
    <h3>Editar Docente @Model.Persona.Cedula - @Model.Persona.Nombres </h3>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.PersonaId)

            @Html.EditorFor(model => model.FormacionAcademica)
            @Html.EditorFor(model => model.AnosDeEjercicio)
            @Html.EditorFor(model => model.FuncionesEjerce)

            <div class="form-group">
                @Html.LabelFor(model => model.CentroId, Resources.T.ResourceManager.GetString("Centro"), new { @class = "control-label col-sm-3" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.CentroId, (IEnumerable<SelectListItem>)ViewBag.Centro, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CentroId)
                </div>
            </div>

            @Html.EditorFor(model => model.FechaContratacion)
            @Html.EditorFor(model => model.isActive)
            @{
                var materiaTemplate = new Monitoreo.Models.DocenteMateria();
                materiaTemplate.DocenteId = Model.Id;
            }
            <table id="@Html.IdFor(model => model.Materias)" class="table table-bordered table-striped table-hover">
                <caption><h3>@Html.DisplayNameFor(model => model.Materias)</h3></caption>
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Tanda)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Area)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.Grados)</th>
                        <th>@Html.DisplayNameFor(model => materiaTemplate.SeccionId)</th>
                        <th>@Resources.T.ResourceManager.GetString("Acciones")</th>
                    </tr>
                </thead>
                <tbody>
                    <tr id="materiaTemplate" style="display: none;">

                        <td>
                            @Html.HiddenFor(model => materiaTemplate.DocenteId)
                            @Html.EnumDropDownListFor(model => materiaTemplate.Tanda, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Tanda)
                        </td>
                        <td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Area, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Area)
                        </td>
                        <td>
                            @Html.EnumDropDownListFor(model => materiaTemplate.Grados, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.Grados)
                        </td>
                        <td>
                            @*@Html.DropDownListFor(model => materiaTemplate.SeccionId, (IEnumerable<SelectListItem>)ViewBag.Seccion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => materiaTemplate.SeccionId)*@
                            <select class="form-control">
                                @foreach (var seccion in ViewBag.Seccion)
                                {

                                    <option id="@seccion.Id" selected="selected">@seccion.Numero</option>
                                }
                            </select>

                        </td>
                        <td>
                            <a href="#" class="btn btn-danger" onclick="return removeMateria('materiaTemplate');">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                            </a>
                        </td>
                    </tr>
                    @for (int i = 0; i < Model.Materias.Count; i++)
                    {
                        <tr id="Materias_@(i)_">

                            <td>
                                @Html.HiddenFor(model => Model.Materias[i].Id)
                                @Html.HiddenFor(model => Model.Materias[i].DocenteId)
                                @Html.EnumDropDownListFor(model => Model.Materias[i].Tanda, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => Model.Materias[i].Tanda)
                            </td>
                            <td>
                                @Html.EnumDropDownListFor(model => Model.Materias[i].Area, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => Model.Materias[i].Area)
                            </td>
                            <td>
                                @Html.EnumDropDownListFor(model => Model.Materias[i].Grados, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => Model.Materias[i].Grados)
                            </td>
                            <td>
                                @*@Html.DropDownListFor(model => Model.Materias[i].SeccionId, (IEnumerable<SelectListItem>)ViewBag.Seccion, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => Model.Materias[i].SeccionId)*@
                                <select name="Materias[@i].SeccionId" class="form-control">
                                    @foreach (var seccion in ViewBag.Seccion)
                                    {
                                        if (seccion.Id == Model.Materias[i].SeccionId)
                                        {
                                            <option value="@seccion.Id" selected="selected">@seccion.Numero</option>
                                        }
                                        else
                                        {
                                            <option value="@seccion.Id">@seccion.Numero</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <a href="#" class="btn btn-danger" onclick="return removeMateria('Materias[@i]');">
                                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="7">
                            <a href="#" class="btn btn-default" onclick='return addMateria();'>
                                <span class="glyphicon glyphicon-file" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Agregar")
                            </a>
                        </td>
                    </tr>
                </tfoot>
            </table>

        </div>
    </div>
    <div class="panel-footer">
        <button type="submit" value="Save" class="btn btn-primary">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Guardar")
        </button>
    </div>
}

@*<script type="text/javascript" src="~/Content/js/personaSelect2imp.js"></script>*@

@section Actions {
    <ul class="nav nav-stacked">
        <li>@Html.ActionLink(Resources.T.ResourceManager.GetString("Volver"), "Index")</li>
    </ul>
}

<script type="text/javascript">
    var cantidadMateria = 0;

    var createPersona = false;
    $(function () {
        //envia el formulario
        $('form').submit(function () {
           
            if ($(this).valid()) {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.result == "OK") {
                            $('#CreateModal').modal('toggle');
                            alert("Docente editado exitosamente!");
                            table.draw();
                        }
                        if (result.result == "ERROR_DOCENTE_REPETIDO") {
                            alert("El docente está repetido en este centro!");
                        }

                    }
                });
            }
            return false;
        });


    });


    @if (Model.Materias != null) {
        <text>cantidadMateria = </text>@Model.Materias.Count;
    }

    function addMateria() {
        var clonned = $("#materiaTemplate")
            .clone()
            .attr({ id: "Materias_" + cantidadMateria + "_", style: "display: table-row" })
            .appendTo("#@Html.IdFor(model => model.Materias)");

        var contenido = clonned.html().replace(/materiaTemplate/g, "Materias[" + cantidadMateria + "]");
        clonned.html(contenido);

        cantidadMateria++;

        return false;
    };

    function removeMateria(id) {
        newId = id.replace(/[\[\]]/g, "_");
        materiaTr = $('#' + newId);
        materiaId = $('#' + newId + '_Id');

        if (materiaId != undefined) {
            value = materiaId.val();
            materiaId.val(value * -1);
        }

        materiaTr.hide();

        return false;
    }
</script>


