@model Monitoreo.Models.BO.Pregunta

@{
    ViewBag.Title = String.Format(Resources.T.ResourceManager.GetString("CreandoX"), Resources.T.ResourceManager.GetString("Pregunta"));
}

<div class="panel-heading">
    <h3>@ViewBag.Title</h3>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="panel-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            @Html.EditorFor(model => model.Descripcion)
            <div class="form-group">
                @Html.LabelFor(model => model.CicloFormativoId, "Actividad Formativa", new { @class = "control-label col-sm-3" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.CicloFormativoId, (IEnumerable<SelectListItem>)ViewBag.CicloFormativoId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CicloFormativoId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EvaluacionId, "Evaluación", new { @class = "control-label col-sm-3" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.EvaluacionId, (IEnumerable<SelectListItem>)ViewBag.EvaluacionId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EvaluacionId)
                </div>
            </div>
            @*@Html.EditorFor(model => model.NivelDominio)*@
            @Html.EditorFor(model => model.TipoEvaluacion)            
            

            @{
                var opcionTemplate = new Monitoreo.Models.BO.PreguntaOpcion();
            }
            <table id="@Html.IdFor(model => model.Opciones)" class="table table-bordered table-striped table-hover">
                <caption><h3>@Html.DisplayNameFor(model => model.Opciones)</h3></caption>
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => opcionTemplate.Titulo)</th>
                        <th>@Html.DisplayNameFor(model => opcionTemplate.Valor)</th>
                        <th>@Html.DisplayNameFor(model => opcionTemplate.Correcta)</th>
                        <th>@Resources.T.ResourceManager.GetString("Acciones")</th>
                    </tr>
                </thead>
                <tbody>
                    <tr id="opcionTemplate" style="display: none;">
                        <td>
                            @Html.HiddenFor(model => opcionTemplate.PreguntaId)

                            @Html.TextBoxFor(model => opcionTemplate.Titulo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => opcionTemplate.Titulo)
                        </td>
                        <td>
                            @Html.TextBoxFor(model => opcionTemplate.Valor, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => opcionTemplate.Valor)
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => opcionTemplate.Correcta, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => opcionTemplate.Correcta)
                        </td>
                        <td>
                            <a href="#" class="btn btn-danger" onclick="return removeOpcion('opcionTemplate');">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                            </a>
                        </td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="5">
                            <a href="#" class="btn btn-default" onclick='return addOpcion();'>
                                <span class="glyphicon glyphicon-file" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Agregar")
                            </a>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="panel-footer">
        <button type="submit" value="Create" class="btn btn-primary">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Guardar")
        </button>
        <script>
            document.write(
            '<a href="' + document.referrer + '" class="btn btn-default">' +
                '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Cancelar")' +
            '</a>');
        </script>
    </div>
}


@section Actions {
    <ul class="nav nav-stacked">
        <li>@Html.ActionLink(Resources.T.ResourceManager.GetString("Volver"), "Index")</li>
    </ul>
}

<script type="text/javascript">
    var cantidadOpcion = 0;

    @if (Model != null && Model.Opciones != null)
    {
        <text>cantidadOpcion = </text>@Model.Opciones.Count;
    }

    function addOpcion() {
        var clonned = $("#opcionTemplate")
            .clone()
            .attr({ id: "Opciones_" + cantidadOpcion + "_", style: "display: table-row" })
            .appendTo("#@Html.IdFor(model => model.Opciones)");

        var contenido = clonned.html().replace(/opcionTemplate/g, "Opciones[" + cantidadOpcion + "]");
        clonned.html(contenido);

        cantidadOpcion++;

        //radioChange();

        return false;
    };

    function removeOpcion(id) {
        newId = id.replace(/[\[\]]/g, "_");
        opcionTr = $('#' + newId);
        opcionId = $('#' + newId + '_Id');

        if (opcionId != undefined) {
            value = opcionId.val();
            opcionId.val(value * -1);
        }

        opcionTr.hide();

        return false;
    }

    //function radioChange () {
    //    $('input[type=radio]').change(function () {
    //        $('input[type=radio]:checked').not(this).prop('checked', false);
    //    });
    //}

    //$(document).ready(radioChange);
</script>