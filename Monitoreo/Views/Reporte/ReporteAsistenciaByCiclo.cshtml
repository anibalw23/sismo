@{
    ViewBag.Title = "ReporteAsistenciaByCiclo";
}

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" />

<link href="https://cdnjs.cloudflare.com/ajax/libs/orb/1.0.9/orb.min.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>

<script src="https://fb.me/react-0.14.0.js"></script>
<script src="https://fb.me/react-dom-0.14.0.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/orb/1.0.9/orb.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/orb/1.0.9/orb.min.js.map"></script>

<script src="~/Content/js/bootstrap-select.js"></script>
<link href="~/Content/css/bootstrap-select.css" rel="stylesheet" />


<style type="text/css">
    #loading-indicator {
        display: none;
        width: 150px;
        height: 150px;
        position: fixed;
        top: 50%;
        left: 50%;
        background: url('../../Content/img/hex-loader2.gif') no-repeat center #fff;
        text-align: center;
        padding: 10px;
        font: normal 16px Tahoma, Geneva, sans-serif;
        border: 1px solid #666;
        margin-left: -50px;
        margin-top: -50px;
        z-index: 2;
        overflow: auto;
    }
</style>




<div class="panel-heading">
    <h3>Reporte de Actividades Formativas del Ciclo</h3>
</div>

<div class="panel-body">
    <div class="form-horizontal">
        <div class="form-group">
            <div class="form-group">
                @Html.Label("Red", new { @class = "control-label col-xs-3" })
                <div class="col-xs-4">
                    @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.RedId, "Seleccione la Red..", new { @class = "form-control", @id = "RedDropDownList" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Centro Educativo", new { @class = "control-label col-xs-3" })
                <div class="col-xs-4">
                    @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.CentroId, "Seleccione Centro..", new { @class = "form-control", @id = "CentroDropDownList" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Ciclo Formativo", new { @class = "control-label col-xs-3" })
                <div class="col-xs-4">
                    @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.SuperCicloFormativoId, "Seleccione el Ciclo..", new { @class = "selectpicker", @data_live_search = "true", @multiple = "multiple", @id = "SuperCicloDropDownList" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-4">
                    <input type="checkbox" id="getDatosDocentesCheck" name="getDatosDocentes" />Incluir Sesion Presencial?
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-4">
                    <input type="checkbox" id="isActiveCheck" name="isActiveCheck" checked />Solo Docentes que deben Participar en Ciclos?
                </div>
            </div>



            <div class="form-group">
                <div class="col-xs-4">
                    <button id="btnReporte" class="btn btn-success">Generar Reporte</button>
                </div>
            </div>

            <div id="pgrid"></div>

            
           
            <div id="loading-indicator">
                Cargando Datos...
                @*<img src="~/Content/img/loadingIndicator.gif" />*@
            </div>

        </div>

    </div>
</div>



<script type="text/javascript">

    $(document).ready(function () {
        $('#loading-indicator').hide();
        var config = {
            dataHeadersLocation: 'columns',
            theme: 'gray',
            toolbar: {
                visible: true
            },
            grandTotal: {
                rowsvisible: true,
                columnsvisible: true
            },
            subTotal: {
                visible: true,
                collapsed: true
            },
            fields: [
                { name: '0', caption: 'Cedula' },
                { name: '1', caption: 'Nombre' },
                { name: '2', caption: 'Fecha', sort: { order: 'asc' } },
                { name: '3', caption: 'Area' },
                {
                    name: '4', caption: 'horas',
                    dataSettings: {
                        formatFunc: function (value) {
                            return Number(value).toFixed(0);
                        }
                    }


                },
                { name: '5', caption: 'CicloFormativo' },
                { name: '6', caption: 'Centro' },
                { name: '7', caption: 'tipoActividad' },

            ],
            rows: ['Centro', 'Nombre'],
            columns: ['tipoActividad'],
            data: ['horas'],
            width: 1000,
        };

        var pgridw = new orb.pgridwidget(config);
        pgridw.render(document.getElementById('pgrid'));

        $('#CentroDropDownList').on('change', function () {

        });

        $('#RedDropDownList').on('change', function () {

            redDropDownVal = $("#RedDropDownList option:selected").val();
            cicloDropdownVal = $("#SuperCicloDropDownList option:selected").val();
            centroDropDownVal = $("#CentroDropDownList option:selected").val();
            if (redDropDownVal == undefined) {
                redDropDownVal = 0;
            }
            if (cicloDropdownVal == undefined) {
                cicloDropdownVal = 0;
            }
            if (centroDropDownVal == undefined) {
                centroDropDownVal = 0;
            }
            //Busca los centros correspondientes a la Red
            $("#CentroDropDownList").html("");
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCentrosByRedId", "Reporte")' + "?redID=" + redDropDownVal,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#CentroDropDownList").append("<option value='0'>Seleccione el centro...</option>");
                    $.each(data.data, function (i, data) {
                        $("#CentroDropDownList").append("<option value=" + data.Id + ">" + data.Nombre + "</option>");
                    });
                }
            });




        });


        $('#SuperCicloDropDownList').on('change', function () {

        });

        $('#btnReporte').on('click', function () {
            $('#loading-indicator').show();
            cicloDropdownVal = $("#SuperCicloDropDownList option:selected").val();
            centroDropDownVal = $("#CentroDropDownList option:selected").val();
            redDropDownVal = $("#RedDropDownList option:selected").val();
            if (redDropDownVal == undefined) {
                redDropDownVal = 0;
            }
            if (cicloDropdownVal == undefined) {
                cicloDropdownVal = 0;
            }
            if (centroDropDownVal == undefined) {
                centroDropDownVal = 0;
            }

            var selected = [];
            multiple = $("#SuperCicloDropDownList option:selected")
            $(multiple).each(function (index, multiple) {
                selected.push([$(this).val()]);
            });

            console.log("Ciclo ids = " + selected);
            getAsistenciaByCiclo(selected, centroDropDownVal, redDropDownVal);


        });


        function groupTable($rows, startIndex, total) {
            if (total === 0) {
                return;
            }
            var i, currentIndex = startIndex, count = 1, lst = [];
            var tds = $rows.find('td:eq(' + currentIndex + ')');
            var ctrl = $(tds[0]);
            lst.push($rows[0]);
            for (i = 1; i <= tds.length; i++) {
                if (ctrl.text() == $(tds[i]).text()) {
                    count++;
                    $(tds[i]).addClass('deleted');
                    lst.push($rows[i]);
                }
                else {
                    if (count > 1) {
                        ctrl.attr('rowspan', count);
                        groupTable($(lst), startIndex + 1, total - 1)
                    }
                    count = 1;
                    lst = [];
                    ctrl = $(tds[i]);
                    lst.push($rows[i]);
                }
            }
        }



        function getAsistenciaByCiclo(cicloId, centroId, redId) {
            var getDatosDocentes = $('#getDatosDocentesCheck').is(":checked");
            var docentesActive = $('#isActiveCheck').is(":checked");
            if (cicloId != 0) {
                $("#tableReport > tbody").html("");
                var dataArr = new Array();
                var dataArrStr = "";
                $('#loading-indicator').show();
                $("loading-indicator").fadeIn("fast");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetAsistenciaByCicloCentro", "Reporte")' + '?cicloId=' + cicloId + "&centroId=" + centroId + "&redId=" + redId + "&horasPresenciales=" + getDatosDocentes + "&includeActive=" + docentesActive,
                    //data: {cicloId: cicloId, centroId: centroId, redId: redId, horasPresenciales: getDatosDocentes  },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        $('#loading-indicator').hide();
                        $("loading-indicator").fadeOut("fast");
                        $.each(data.data, function (i, data) {
                            dataArr.push("['" + data.cedula + "', '" + data.nombre + "','" + data.fecha + "','" + data.area + "'," + data.horas + ", '" + data.tipoActividad + "']");
                            dataArrStr = dataArrStr + '["' + data.cedula + '","' + data.nombre + '","' + data.fecha + '","' + data.area + '",' + data.horas + ',"' + data.cicloFormativo + '","' + data.Centro + '","' + data.tipoActividad + '"' + ']' + ',';
                        });
                        dataArrStr = dataArrStr.replace(/,\s*$/, "");
                        var json = JSON.parse("[" + dataArrStr + "]");
                        //console.log("dataArrStr = " + json);
                        pgridw.refreshData(json);
                    }

                });
            }
        }
    });

</script>
