<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = @Resources.T.ResourceManager.GetString("<#= ViewDataTypeShortName#>s");
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<div class="panel-heading">
    <h3>@ViewBag.Title</h3>
</div>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<div class="panel-body">
    <table id="dataTable" class="table table-bordered table-striped table-hover">
        <thead>
            <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
                <th>
                    @Html.DisplayNameFor(model => model.<#= property.PropertyName #>)
                </th>
<#
    }
}
#>
                <th>@Resources.T.ResourceManager.GetString("Acciones")</th>
            </tr>
        </thead>
        @*<tbody>
@foreach (var item in Model) {
            <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
                <td>
                    @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
                </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
                <td class="row-actions">
                    <a href="@Url.Action("Details", new { id = item.<#= pkName #> })" class="btn btn-default">
                        <span class="glyphicon glyphicon-list" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Detalles")
                    </a>
                    <a href="@Url.Action("Edit", new { id = item.<#= pkName #> })" class="btn btn-default">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Editar")
                    </a>
                    <a href="@Url.Action("Delete", new { id = item.<#= pkName #> })" class="btn btn-danger">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                    </a>
                </td>
<#
} else {
#>
                <td class="row-actions">
                    <a href="@Url.Action("Details", new { /* id=item.PrimaryKey */ })" class="btn btn-default">
                        <span class="glyphicon glyphicon-list" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Detalles")
                    </a>
                    <a href="@Url.Action("Edit", new { /* id=item.PrimaryKey */ })" class="btn btn-default">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Editar")
                    </a>
                    <a href="@Url.Action("Delete", new { /* id=item.PrimaryKey */ })" class="btn btn-danger">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")
                    </a>
                </td>
<#
}
#>
            </tr>
}
	    </tbody>*@
    </table>
</div>

<div class="panel-footer">
    <a href="@Url.Action("Create")" class="btn btn-default">
        <span class="glyphicon glyphicon-file" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("CrearNuevo")
    </a>
</div>

@section Styles {
    @Styles.Render("~/bundles/dataTables/css")
}

@section Scripts {
    @Scripts.Render("~/bundles/dataTables/js")

    <script type="text/javascript">
    (function ($) {
        var actionsTemplate = '<a href="@Url.Action("Details", new { id = "ID_Holder" })" class="btn btn-default"><span class="glyphicon glyphicon-list" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Detalles")</a>\
                               <a href="@Url.Action("Edit", new { id = "ID_Holder" })" class="btn btn-default"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Editar")</a>\
                               <a href="@Url.Action("Delete", new { id = "ID_Holder" })" class="btn btn-danger"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> @Resources.T.ResourceManager.GetString("Borrar")</a>';

        $('#dataTable').dataTable(
            {
                autoWidth: false,
                processing: true,
                serverSide: true,
                ordering: true,
                stateSave: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
                language: { url: '/Content/js/dataTables.Spanish.txt' },
                ajax: { url: '@Url.Action("GetDataJson")', type: 'POST' },
                columns: [
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
                    { data: '<#= property.PropertyName #>' },
<#
    }
}
#>
                    { data: null, targets: -1, defaultContent: actionsTemplate, orderable: false }
                ],
                createdRow: function (row, data, index) {
                    var lastTD = $('td', row).last();

                    $("a[href]", lastTD).each(function () {
                        this.href = this.href.replace('ID_Holder', data.DT_RowId);
                    });

                    lastTD.addClass('row-actions');
                }
            }
    );
    })(jQuery);
    </script>
}
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>